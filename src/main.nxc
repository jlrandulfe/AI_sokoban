#define WAIT_TIME 100
#define AVG_SAMPLES 3

#include "structs.h"
#include "MoveStraight.h"
#include "TurnRight.h"
#include "TurnLeft.h"
#include "DeliverCan.h"
#include "SensorRead.h"
#include "Print.h"


task main(){

    // Configure inputs 1, 2 and 3 to be light sensors.

    SetSensorLight(IN_1);
    SetSensorLight(IN_2);
    SetSensorLight(IN_3);

    sensorBoolStruct sensors[AVG_SAMPLES];    // Boolean variables indicating if the sensors are detecting a black area.
    sensorBoolStruct sens_mean;

    motorStruct motor; // Motors variables.
        int path[]= {1,5,4,1,1,2,1,1,2,1,1,2,1,1,5,2,1,3,1,1,3,1,1,1,1,3,1,2,1,1,3,1,1,
                     3,1,2,1,3,1,3,1,1,5,2,1,1,1,5,2,1,1,3,1,1,3,1,1,3,1,1,1,1,5,4,1,1,
                     1,3,1,1,3,1,1,1,3,1,5,2,1,1,1,5,2,1,3,1,3,1,5,2,1,3,1,3,1,5,2,1,3,
                     1,1,1,3,1,5,2,1,5,3,1,1,2,1,1,1,2,1,1,2,1,1,1,5,2,1,3,1,1,1,5,3,1,
                     5,2,1,2,1,5,2,1,2,1,1,5,3,1,1,3,1,5,2,1,3,1,1,2,1,1,2,1,5,3,1,2,1,
                     2,1,1,1,5,2,1,3,1,1,1,5,3,1,2,1,1,2,1,1,2,1,5,2,1,5,2,1,3,1,3,1,5,
                     2,1,3,1,1,1,3,1,5,2,1,1,1,2,1,1,3,1,3,1,5,2,1,3,1,3,1,1,1,1,5,2,1,
                     3,1,1,1,1,5,99};
            //  1: Drive forwards
            //  2: Turn right
            //  3: Turn left
            //  4: Turn 180            // both weels
            //  5: Place can
            //  6: Drive backwards
            //  7: Two s
            // 99: Done
        int i = 0; //Count up path

    sensorIntStruct sensor_thresholds;      // Values defining the thresholds of the 3 sensors limits
    sensor_thresholds.middle=35;
    sensor_thresholds.left=39;
    sensor_thresholds.right=28;
    motor.state = 0;
            
    char speedForward = 50;
    char speedSlow = 30;
    char speedDeliverCan = 50;
    char speedTurn90 = 90;
    char speedTurn180 = 70;
    char speedTurnSlow = 30;
    
    char compForward =20;
    char compDeliverCan = 10;

    int sample = 0;
    // Main loop.
while(path[i] != 99)

    {
    if (sample == AVG_SAMPLES) {
      sample = 0;
    }
    else {
      sample += 1;
    }
    sensors[sample] = sensor_read(sensor_thresholds);
    sens_mean.left = 0;
    sens_mean.middle = 0;
    sens_mean.right= 0;
    // Get the sum of all samples.
    for (int index = 0; index < AVG_SAMPLES; ++index) {
      sens_mean.left += sensors[index].left;
      sens_mean.middle += sensors[index].middle;
      sens_mean.right += sensors[index].right;
    }
    // Calculate the average
    sens_mean.left /= AVG_SAMPLES;
    sens_mean.middle /= AVG_SAMPLES;
    sens_mean.right /= AVG_SAMPLES;


// ------------------------------ Program ------------------------------

   if(motor.state == 99){
      i = i + 1;
      TextOut(10, LCD_LINE6, StrCat("WAITING: i: ", NumToStr(i) ));
      OnRev(OUT_A, 0);
      OnRev(OUT_C, 0);
      // if ((path[i-1] != 1) && (path[i] !=1)){
      Wait(WAIT_TIME);
      // }
      motor.state = 0;
   }
   if (path[i] == 1){                                   // Drive forwards
      motor = MoveStraight(sens_mean, motor.state, speedForward, speedSlow, compForward, path[i+1]);
      OnRevSync(OUT_AC, motor.speed, motor.turn);
   }
   else if (path[i] == 2){                              // Turn right
      motor = turn(sensors[sample], motor.state, speedTurn90,speedTurnSlow);
      OnRev(OUT_A, 0);
      OnRev(OUT_C, motor.speed);
   }
   else if (path[i] == 3){                              // Turn left
      motor = turnLeft(sensors[sample], motor.state, speedTurn90, speedTurnSlow);
      OnRev(OUT_A, motor.speed);
      OnRev(OUT_C, 0);
   }
   else if (path[i] == 4){                              // Turn 180
      motor = turn(sensors[sample], motor.state, speedTurn180, speedTurnSlow);
      OnFwd(OUT_A, motor.speed);
      OnRev(OUT_C, motor.speed);
   }
   else if (path[i] == 5){                              // Deliver Can
      motor = DeliverCan(sens_mean, motor.state, speedDeliverCan, compDeliverCan);
      if (motor.state < 50){
         OnRevSync(OUT_AC, motor.speed, motor.turn);
      }
      else{
         OnFwdSync(OUT_AC, motor.speed, motor.turn);
      }
   }

   print(i,path,sens_mean, motor);

   if (path[i] == 88){
      i=0;
   }
}
}

//Exam:
//4 topics (2 robotics 2 seach)
//5 minuts about the other topic in the project
