#define WAIT_TIME 1000



//#include "MoveStraightTestHeader.h"
//motorStruct MoveStraight(sensorBoolStruct inputSensors, bool move){};

#include "structs.h"
#include "MoveStraight.h"



motorStruct turn(sensorBoolStruct inputSensors, bool move){
    motorStruct returnMovement;
    char speed = 50;
    int turning_state;
    int x;
    returnMovement.done = 0;


    if (turning_state == 0){ // First turning state
         x = 10;
         if (!inputSensors.left){
            turning_state = 1;
         }
    }
    else if (turning_state == 1){ //Second turning state
         x = 10;
         if (inputSensors.left){
            turning_state = 2;
         }
    }
    else if (turning_state == 2){ //Third turning state
         x = 10;
         if (!inputSensors.left){
            turning_state = 3;
         }
    }
    else if (turning_state == 3){ //Fourth turning state
         x = 10;
         if (inputSensors.left){
            turning_state = 4;
         }
    }
    else if (turning_state == 4){ //Done turning state
         x = 20;
    }


    if (x==10){ //Turning left
         returnMovement.speed = speed;
         returnMovement.done = 0;
    }
    else if (x==20){ //Turning right
         returnMovement.done = 1;
         returnMovement.speed = 0;
    }

    // Print sensors values to screen.
         TextOut(10, LCD_LINE1, StrCat(" L ", NumToStr(inputSensors.left)));
         TextOut(10, LCD_LINE2, StrCat(" M ", NumToStr(inputSensors.middle)));
         TextOut(10, LCD_LINE3, StrCat(" R ", NumToStr(inputSensors.right)));
         TextOut(10, LCD_LINE4, StrCat("turning_state: ", NumToStr(turning_state)));
    return returnMovement;

};




task main(){
    // Configure inputs 1, 2 and 3 to be light sensors.
    SetSensorLight(IN_1);
    SetSensorLight(IN_2);
    SetSensorLight(IN_3);

    sensorIntStruct sensor_raw;             // Variables where the raw value of the sensors will be stored.
    sensorBoolStruct sensor_bool;           // Boolean variables indicating if the sensors are detecting a black area.
    sensorIntStruct sensor_thresholds;      // Values defining the thresholds of the 3 sensors limits

    motorStruct motor;                      // Motors variables.

    // Main loop.
    while(true)
    {
        // Get the value of the 3 infrared sensors.
        sensor_raw.left = Sensor(IN_1);
        sensor_raw.middle = Sensor(IN_2);
        sensor_raw.right = Sensor(IN_3);

        // Go through every programmed behaviour.
        // 1st behaviour: move straight, following a black line.

        if (sensor_raw.middle > 38)
            sensor_bool.middle = 0;
        else
            sensor_bool.middle = 1;

        if (sensor_raw.right > 32)
            sensor_bool.right = 0; //black
        else
            sensor_bool.right = 1; // white

        if (sensor_raw.left > 38)
            sensor_bool.left = 0;
        else
            sensor_bool.left = 1;



// ------------------------------ Program ------------------------------

        int started;
        int state;
        int behavior;
        int path[]={1, 2, 1 ,2, 99};
            //  1: Drive forwards
            //  2: Turn right
            //  3: Turn left
            //  4: Place can
            //  5: Drive backwards
            // 99: Done
        int i; //Count up path


        if (path[i] == 1){                                // Drive forwards
           state = 2;
        }
        else if (path[i] == 2){                           // Turn right
           state = 2;
        }
        else if (path[i] == 3){                           // Turn left
           state = 3;

        }
        else if (path[i] == 99){                           // Done
           state = 99;
        }


         if(motor.done == 1){
                         i = i + 1;
                         Wait(WAIT_TIME);
         }

         motor.done = 0;

        if (state == 1){                                   // Drive forwards
           motor.done=0;
           motor = MoveStraight(sensor_bool,1);
           OnRevSync(OUT_AC, motor.speed, motor.turn);
           }
        else if (state == 2){                              // Turn right
           motor.done=0;
           motor = turn(sensor_bool,1);
           OnRev(OUT_A, 0);
           OnRev(OUT_C, motor.speed);
           }
        else if (state == 3){                              // Turn left
           motor.done=0;
           motor = turn(sensor_bool,1);
           OnRev(OUT_A, motor.speed);
           OnRev(OUT_C, 0);
           }
        else if (state == 99){                             // Done
           OnRev(OUT_A, 0);
           OnRev(OUT_C, 0);
           TextOut(10, LCD_LINE1, StrCat("PATH DONE"));
           TextOut(10, LCD_LINE2, StrCat("                              "));
           TextOut(10, LCD_LINE3, StrCat("                              "));
           TextOut(10, LCD_LINE4, StrCat("                              "));
           }


        TextOut(10, LCD_LINE6, StrCat("i: ", NumToStr(i), "              "));
        TextOut(10, LCD_LINE6, StrCat("i: ", NumToStr(i), "              "));
        TextOut(10, LCD_LINE7, StrCat("motor.done: ", NumToStr(motor.done), "              "));
        TextOut(10, LCD_LINE8, StrCat("Main state: ", NumToStr(state), "              "));

       // Wait(WAIT_TIME);
    }
}
